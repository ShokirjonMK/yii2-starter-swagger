services:
  php:
    container_name: ${DOCKER_PROJECT_NAME}_php
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/error_logs:/var/log/php
      - ./docker/php/supervisor/yii-queue-worker.conf:/etc/supervisor/conf.d/yii-queue-worker.conf
    build: ./docker/php
#    networks:
#      - rabbitmq_go_net
    depends_on:
      - postgres

  nginx:
    container_name: ${DOCKER_PROJECT_NAME}_nginx
    image: nginx:1.19
    restart: unless-stopped
    volumes:
      - ./docker/nginx/logs:/var/log/nginx
      - ./:/var/www/html
      - ./docker/nginx/common.conf:/etc/nginx/common.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - postgres
#    networks:
#      - rabbitmq_go_net
    ports:
      - ${DOCKER_API_PORT}:${DOCKER_API_PORT}
      - ${DOCKER_FRONT_PORT}:${DOCKER_FRONT_PORT}
      - ${DOCKER_BACKEND_PORT}:${DOCKER_BACKEND_PORT}

  postgres:
    image: postgres:14
    restart: unless-stopped
    container_name: ${DOCKER_PROJECT_NAME}_postgres
#    networks:
#      - rabbitmq_go_net
    ports:
      - 127.0.0.1:${DOCKER_DATABASE_PORT}:5432
    volumes:
      - ./docker/postgres/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_DB=${DOCKER_PROJECT_NAME}

  redis:
    image: redis:6.0.10-alpine
    restart: unless-stopped
    container_name: ${DOCKER_PROJECT_NAME}_redis


#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
#    container_name: ${DOCKER_PROJECT_NAME}_elasticsearch
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=true
#      - xpack.security.authc.api_key.enabled=true
#      - xpack.security.transport.ssl.enabled=true
#      - ELASTIC_PASSWORD=elasticpassword
#      - ES_JAVA_OPTS=-Xms512m -Xmx512m
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    volumes:
#      - es_data:/usr/share/elasticsearch/data
#      - ./heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
#    restart: unless-stopped

#  logstash:
#    image: logstash:7.17.0
#    container_name: ${DOCKER_PROJECT_NAME}_logstash
#    restart: unless-stopped
#    volumes:
#      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
#      - ./runtime/logs:/var/www/html/backend/runtime/logs
#    ports:
#      - "5044:5044"
#    depends_on:
#      - elasticsearch
#
#  kibana:
#    image: kibana:7.17.0
#    container_name: ${DOCKER_PROJECT_NAME}_kibana
#    restart: unless-stopped
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      - ELASTICSEARCH_USERNAME=elastic
#      - ELASTICSEARCH_PASSWORD=elasticpassword
#      - XPACK_SECURITY_ENABLED=true
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#
#  metricbeat:
#    image: docker.elastic.co/beats/metricbeat:7.17.0
#    container_name: metricbeat
#    volumes:
#      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - postgres
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    ports:
#      - "5066:5066"

#networks:
#  rabbitmq_go_net:
#    external: true
#
#volumes:
#  es_data:
#    driver: local

